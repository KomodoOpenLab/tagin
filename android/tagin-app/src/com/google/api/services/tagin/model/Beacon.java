/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://code.google.com/p/google-apis-client-generator/
 * (build: 2013-06-26 16:27:34 UTC)
 * on 2013-07-02 at 12:34:23 UTC 
 * Modify at your own risk.
 */

package com.google.api.services.tagin.model;

/**
 * Model definition for Beacon.
 *
 * <p> This is the Java data model class that specifies how to parse/serialize into the JSON that is
 * transmitted over HTTP when working with the . For a detailed explanation see:
 * <a href="http://code.google.com/p/google-http-java-client/wiki/JSON">http://code.google.com/p/google-http-java-client/wiki/JSON</a>
 * </p>
 *
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public final class Beacon extends com.google.api.client.json.GenericJson 
	implements Comparable<Beacon> {

	public static final Double NULL_RSSI = -1.0;
	/**
	 * The value may be {@code null}.
	 */
	@com.google.api.client.util.Key
	private java.lang.String id;

	/**
	 * The value may be {@code null}.
	 */
	@com.google.api.client.util.Key
	private Key key;

	/**
	 * The value may be {@code null}.
	 */
	@com.google.api.client.util.Key
	private java.lang.Double rank;

	/**
	 * The value may be {@code null}.
	 */
	@com.google.api.client.util.Key
	private java.lang.Double rssi;

	public Beacon(String bssid, Integer frequency, Integer dbm) {
		this.id = bssid + ";" + frequency;
		this.rssi = Util.dBm2Power(dbm);
		this.rank = null;
	}

	public void updateRank(Double maxRssi) {
		this.rank = Util.calculateRank(rssi, maxRssi);
	}

	/**
	 * @return value or {@code null} for none
	 */
	public java.lang.String getId() {
		return id;
	}

	/**
	 * @param id id or {@code null} for none
	 */
	public Beacon setId(java.lang.String id) {
		this.id = id;
		return this;
	}

	/**
	 * @return value or {@code null} for none
	 */
	public Key getKey() {
		return key;
	}

	/**
	 * @param key key or {@code null} for none
	 */
	public Beacon setKey(Key key) {
		this.key = key;
		return this;
	}

	/**
	 * @return value or {@code null} for none
	 */
	public java.lang.Double getRank() {
		return rank;
	}

	/**
	 * @param rank rank or {@code null} for none
	 */
	public Beacon setRank(java.lang.Double rank) {
		this.rank = rank;
		return this;
	}

	/**
	 * @return value or {@code null} for none
	 */
	public java.lang.Double getRssi() {
		return rssi;
	}

	/**
	 * @param rssi rssi or {@code null} for none
	 */
	public Beacon setRssi(java.lang.Double rssi) {
		this.rssi = rssi;
		return this;
	}

	@Override
	public Beacon set(String fieldName, Object value) {
		return (Beacon) super.set(fieldName, value);
	}

	@Override
	public Beacon clone() {
		return (Beacon) super.clone();
	}

	@Override
	public int compareTo(Beacon beacon) {
		if (beacon.getRssi() > getRssi()) return 1;
		if (beacon.getRssi() < getRssi()) return -1;
		return 0;
	}

	public String toString() {
		return getClass().getSimpleName() + "[" + 
				"ID: " + getId() + 
				", RSSI: " + getRssi() + 
				", rank: " + getRank() + "]";
	}

}

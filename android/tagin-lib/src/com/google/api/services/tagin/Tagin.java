/*
 * Licensed under the Apache License, Version 2.0 (the "License"); you may not use this file except
 * in compliance with the License. You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software distributed under the License
 * is distributed on an "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express
 * or implied. See the License for the specific language governing permissions and limitations under
 * the License.
 */
/*
 * This code was generated by https://code.google.com/p/google-apis-client-generator/
 * (build: 2013-08-26 17:13:51 UTC)
 * on 2013-09-01 at 17:59:42 UTC 
 * Modify at your own risk.
 */

package com.google.api.services.tagin;

/**
 * Service definition for Tagin (v1).
 *
 * <p>
 * This is an API
 * </p>
 *
 * <p>
 * For more information about this service, see the
 * <a href="" target="_blank">API Documentation</a>
 * </p>
 *
 * <p>
 * This service uses {@link TaginRequestInitializer} to initialize global parameters via its
 * {@link Builder}.
 * </p>
 *
 * @since 1.3
 * @author Google, Inc.
 */
@SuppressWarnings("javadoc")
public class Tagin extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient {

  // Note: Leave this static initializer at the top of the file.
  static {
    com.google.api.client.util.Preconditions.checkState(
        com.google.api.client.googleapis.GoogleUtils.MAJOR_VERSION == 1 &&
        com.google.api.client.googleapis.GoogleUtils.MINOR_VERSION >= 15,
        "You are currently running with version %s of google-api-client. " +
        "You need at least version 1.15 of google-api-client to run version " +
        "1.15.0-rc of the tagin library.", com.google.api.client.googleapis.GoogleUtils.VERSION);
  }

  /**
   * The default encoded root URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_ROOT_URL = "https://tagin-api.appspot.com/_ah/api/";

  /**
   * The default encoded service path of the service. This is determined when the library is
   * generated and normally should not be changed.
   *
   * @since 1.7
   */
  public static final String DEFAULT_SERVICE_PATH = "tagin/v1/";

  /**
   * The default encoded base URL of the service. This is determined when the library is generated
   * and normally should not be changed.
   */
  public static final String DEFAULT_BASE_URL = DEFAULT_ROOT_URL + DEFAULT_SERVICE_PATH;

  /**
   * Constructor.
   *
   * <p>
   * Use {@link Builder} if you need to specify any of the optional parameters.
   * </p>
   *
   * @param transport HTTP transport, which should normally be:
   *        <ul>
   *        <li>Google App Engine:
   *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
   *        <li>Android: {@code newCompatibleTransport} from
   *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
   *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
   *        </li>
   *        </ul>
   * @param jsonFactory JSON factory, which may be:
   *        <ul>
   *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
   *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
   *        <li>Android Honeycomb or higher:
   *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
   *        </ul>
   * @param httpRequestInitializer HTTP request initializer or {@code null} for none
   * @since 1.7
   */
  public Tagin(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
      com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
    this(new Builder(transport, jsonFactory, httpRequestInitializer));
  }

  /**
   * @param builder builder
   */
  Tagin(Builder builder) {
    super(builder);
  }

  @Override
  protected void initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest<?> httpClientRequest) throws java.io.IOException {
    super.initialize(httpClientRequest);
  }

  /**
   * An accessor for creating requests from the Fingerprints collection.
   *
   * <p>The typical use is:</p>
   * <pre>
   *   {@code Tagin tagin = new Tagin(...);}
   *   {@code Tagin.Fingerprints.List request = tagin.fingerprints().list(parameters ...)}
   * </pre>
   *
   * @return the resource collection
   */
  public Fingerprints fingerprints() {
    return new Fingerprints();
  }

  /**
   * The "fingerprints" collection of methods.
   */
  public class Fingerprints {

    /**
     * Create a request for the method "fingerprints.get".
     *
     * This request holds the parameters needed by the the tagin server.  After setting any optional
     * parameters, call the {@link Get#execute()} method to invoke the remote operation.
     *
     * @param fingerprintId
     * @return the request
     */
    public Get get(java.lang.Long fingerprintId) throws java.io.IOException {
      Get result = new Get(fingerprintId);
      initialize(result);
      return result;
    }

    public class Get extends TaginRequest<com.google.api.services.tagin.model.Fingerprint> {

      private static final String REST_PATH = "fingerprints/{fingerprint_id}";

      /**
       * Create a request for the method "fingerprints.get".
       *
       * This request holds the parameters needed by the the tagin server.  After setting any optional
       * parameters, call the {@link Get#execute()} method to invoke the remote operation. <p> {@link
       * Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
       * called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param fingerprintId
       * @since 1.13
       */
      protected Get(java.lang.Long fingerprintId) {
        super(Tagin.this, "GET", REST_PATH, null, com.google.api.services.tagin.model.Fingerprint.class);
        this.fingerprintId = com.google.api.client.util.Preconditions.checkNotNull(fingerprintId, "Required parameter fingerprintId must be specified.");
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public Get setAlt(java.lang.String alt) {
        return (Get) super.setAlt(alt);
      }

      @Override
      public Get setFields(java.lang.String fields) {
        return (Get) super.setFields(fields);
      }

      @Override
      public Get setKey(java.lang.String key) {
        return (Get) super.setKey(key);
      }

      @Override
      public Get setOauthToken(java.lang.String oauthToken) {
        return (Get) super.setOauthToken(oauthToken);
      }

      @Override
      public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Get) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Get setQuotaUser(java.lang.String quotaUser) {
        return (Get) super.setQuotaUser(quotaUser);
      }

      @Override
      public Get setUserIp(java.lang.String userIp) {
        return (Get) super.setUserIp(userIp);
      }

      @com.google.api.client.util.Key("fingerprint_id")
      private java.lang.Long fingerprintId;

      /**

       */
      public java.lang.Long getFingerprintId() {
        return fingerprintId;
      }

      public Get setFingerprintId(java.lang.Long fingerprintId) {
        this.fingerprintId = fingerprintId;
        return this;
      }

      @Override
      public Get set(String parameterName, Object value) {
        return (Get) super.set(parameterName, value);
      }
    }
    /**
     * Create a request for the method "fingerprints.list".
     *
     * This request holds the parameters needed by the the tagin server.  After setting any optional
     * parameters, call the {@link List#execute()} method to invoke the remote operation.
     *
     * @return the request
     */
    public List list() throws java.io.IOException {
      List result = new List();
      initialize(result);
      return result;
    }

    public class List extends TaginRequest<com.google.api.services.tagin.model.FingerprintCollection> {

      private static final String REST_PATH = "fingerprints";

      /**
       * Create a request for the method "fingerprints.list".
       *
       * This request holds the parameters needed by the the tagin server.  After setting any optional
       * parameters, call the {@link List#execute()} method to invoke the remote operation. <p> {@link
       * List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
       * called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @since 1.13
       */
      protected List() {
        super(Tagin.this, "GET", REST_PATH, null, com.google.api.services.tagin.model.FingerprintCollection.class);
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public List setAlt(java.lang.String alt) {
        return (List) super.setAlt(alt);
      }

      @Override
      public List setFields(java.lang.String fields) {
        return (List) super.setFields(fields);
      }

      @Override
      public List setKey(java.lang.String key) {
        return (List) super.setKey(key);
      }

      @Override
      public List setOauthToken(java.lang.String oauthToken) {
        return (List) super.setOauthToken(oauthToken);
      }

      @Override
      public List setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (List) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public List setQuotaUser(java.lang.String quotaUser) {
        return (List) super.setQuotaUser(quotaUser);
      }

      @Override
      public List setUserIp(java.lang.String userIp) {
        return (List) super.setUserIp(userIp);
      }

      @Override
      public List set(String parameterName, Object value) {
        return (List) super.set(parameterName, value);
      }
    }

  }

  /**
   * An accessor for creating requests from the Patterns collection.
   *
   * <p>The typical use is:</p>
   * <pre>
   *   {@code Tagin tagin = new Tagin(...);}
   *   {@code Tagin.Patterns.List request = tagin.patterns().list(parameters ...)}
   * </pre>
   *
   * @return the resource collection
   */
  public Patterns patterns() {
    return new Patterns();
  }

  /**
   * The "patterns" collection of methods.
   */
  public class Patterns {

    /**
     * Create a request for the method "patterns.add".
     *
     * This request holds the parameters needed by the the tagin server.  After setting any optional
     * parameters, call the {@link Add#execute()} method to invoke the remote operation.
     *
     * @param content the {@link com.google.api.services.tagin.model.Pattern}
     * @return the request
     */
    public Add add(com.google.api.services.tagin.model.Pattern content) throws java.io.IOException {
      Add result = new Add(content);
      initialize(result);
      return result;
    }

    public class Add extends TaginRequest<com.google.api.services.tagin.model.URN> {

      private static final String REST_PATH = "patterns";

      /**
       * Create a request for the method "patterns.add".
       *
       * This request holds the parameters needed by the the tagin server.  After setting any optional
       * parameters, call the {@link Add#execute()} method to invoke the remote operation. <p> {@link
       * Add#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
       * called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param content the {@link com.google.api.services.tagin.model.Pattern}
       * @since 1.13
       */
      protected Add(com.google.api.services.tagin.model.Pattern content) {
        super(Tagin.this, "POST", REST_PATH, content, com.google.api.services.tagin.model.URN.class);
      }

      @Override
      public Add setAlt(java.lang.String alt) {
        return (Add) super.setAlt(alt);
      }

      @Override
      public Add setFields(java.lang.String fields) {
        return (Add) super.setFields(fields);
      }

      @Override
      public Add setKey(java.lang.String key) {
        return (Add) super.setKey(key);
      }

      @Override
      public Add setOauthToken(java.lang.String oauthToken) {
        return (Add) super.setOauthToken(oauthToken);
      }

      @Override
      public Add setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Add) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Add setQuotaUser(java.lang.String quotaUser) {
        return (Add) super.setQuotaUser(quotaUser);
      }

      @Override
      public Add setUserIp(java.lang.String userIp) {
        return (Add) super.setUserIp(userIp);
      }

      @Override
      public Add set(String parameterName, Object value) {
        return (Add) super.set(parameterName, value);
      }
    }
    /**
     * Create a request for the method "patterns.get".
     *
     * This request holds the parameters needed by the the tagin server.  After setting any optional
     * parameters, call the {@link Get#execute()} method to invoke the remote operation.
     *
     * @param patternId
     * @return the request
     */
    public Get get(java.lang.Long patternId) throws java.io.IOException {
      Get result = new Get(patternId);
      initialize(result);
      return result;
    }

    public class Get extends TaginRequest<com.google.api.services.tagin.model.Pattern> {

      private static final String REST_PATH = "patterns/{pattern_id}";

      /**
       * Create a request for the method "patterns.get".
       *
       * This request holds the parameters needed by the the tagin server.  After setting any optional
       * parameters, call the {@link Get#execute()} method to invoke the remote operation. <p> {@link
       * Get#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
       * called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param patternId
       * @since 1.13
       */
      protected Get(java.lang.Long patternId) {
        super(Tagin.this, "GET", REST_PATH, null, com.google.api.services.tagin.model.Pattern.class);
        this.patternId = com.google.api.client.util.Preconditions.checkNotNull(patternId, "Required parameter patternId must be specified.");
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public Get setAlt(java.lang.String alt) {
        return (Get) super.setAlt(alt);
      }

      @Override
      public Get setFields(java.lang.String fields) {
        return (Get) super.setFields(fields);
      }

      @Override
      public Get setKey(java.lang.String key) {
        return (Get) super.setKey(key);
      }

      @Override
      public Get setOauthToken(java.lang.String oauthToken) {
        return (Get) super.setOauthToken(oauthToken);
      }

      @Override
      public Get setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Get) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Get setQuotaUser(java.lang.String quotaUser) {
        return (Get) super.setQuotaUser(quotaUser);
      }

      @Override
      public Get setUserIp(java.lang.String userIp) {
        return (Get) super.setUserIp(userIp);
      }

      @com.google.api.client.util.Key("pattern_id")
      private java.lang.Long patternId;

      /**

       */
      public java.lang.Long getPatternId() {
        return patternId;
      }

      public Get setPatternId(java.lang.Long patternId) {
        this.patternId = patternId;
        return this;
      }

      @Override
      public Get set(String parameterName, Object value) {
        return (Get) super.set(parameterName, value);
      }
    }
    /**
     * Create a request for the method "patterns.list".
     *
     * This request holds the parameters needed by the the tagin server.  After setting any optional
     * parameters, call the {@link List#execute()} method to invoke the remote operation.
     *
     * @return the request
     */
    public List list() throws java.io.IOException {
      List result = new List();
      initialize(result);
      return result;
    }

    public class List extends TaginRequest<com.google.api.services.tagin.model.PatternCollection> {

      private static final String REST_PATH = "patterns";

      /**
       * Create a request for the method "patterns.list".
       *
       * This request holds the parameters needed by the the tagin server.  After setting any optional
       * parameters, call the {@link List#execute()} method to invoke the remote operation. <p> {@link
       * List#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must be
       * called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @since 1.13
       */
      protected List() {
        super(Tagin.this, "GET", REST_PATH, null, com.google.api.services.tagin.model.PatternCollection.class);
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public List setAlt(java.lang.String alt) {
        return (List) super.setAlt(alt);
      }

      @Override
      public List setFields(java.lang.String fields) {
        return (List) super.setFields(fields);
      }

      @Override
      public List setKey(java.lang.String key) {
        return (List) super.setKey(key);
      }

      @Override
      public List setOauthToken(java.lang.String oauthToken) {
        return (List) super.setOauthToken(oauthToken);
      }

      @Override
      public List setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (List) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public List setQuotaUser(java.lang.String quotaUser) {
        return (List) super.setQuotaUser(quotaUser);
      }

      @Override
      public List setUserIp(java.lang.String userIp) {
        return (List) super.setUserIp(userIp);
      }

      @Override
      public List set(String parameterName, Object value) {
        return (List) super.set(parameterName, value);
      }
    }
    /**
     * Create a request for the method "patterns.remove".
     *
     * This request holds the parameters needed by the the tagin server.  After setting any optional
     * parameters, call the {@link Remove#execute()} method to invoke the remote operation.
     *
     * @param patternId
     * @return the request
     */
    public Remove remove(java.lang.Long patternId) throws java.io.IOException {
      Remove result = new Remove(patternId);
      initialize(result);
      return result;
    }

    public class Remove extends TaginRequest<Void> {

      private static final String REST_PATH = "patterns/{pattern_id}";

      /**
       * Create a request for the method "patterns.remove".
       *
       * This request holds the parameters needed by the the tagin server.  After setting any optional
       * parameters, call the {@link Remove#execute()} method to invoke the remote operation. <p> {@link
       * Remove#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param patternId
       * @since 1.13
       */
      protected Remove(java.lang.Long patternId) {
        super(Tagin.this, "DELETE", REST_PATH, null, Void.class);
        this.patternId = com.google.api.client.util.Preconditions.checkNotNull(patternId, "Required parameter patternId must be specified.");
      }

      @Override
      public Remove setAlt(java.lang.String alt) {
        return (Remove) super.setAlt(alt);
      }

      @Override
      public Remove setFields(java.lang.String fields) {
        return (Remove) super.setFields(fields);
      }

      @Override
      public Remove setKey(java.lang.String key) {
        return (Remove) super.setKey(key);
      }

      @Override
      public Remove setOauthToken(java.lang.String oauthToken) {
        return (Remove) super.setOauthToken(oauthToken);
      }

      @Override
      public Remove setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Remove) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Remove setQuotaUser(java.lang.String quotaUser) {
        return (Remove) super.setQuotaUser(quotaUser);
      }

      @Override
      public Remove setUserIp(java.lang.String userIp) {
        return (Remove) super.setUserIp(userIp);
      }

      @com.google.api.client.util.Key("pattern_id")
      private java.lang.Long patternId;

      /**

       */
      public java.lang.Long getPatternId() {
        return patternId;
      }

      public Remove setPatternId(java.lang.Long patternId) {
        this.patternId = patternId;
        return this;
      }

      @Override
      public Remove set(String parameterName, Object value) {
        return (Remove) super.set(parameterName, value);
      }
    }

  }

  /**
   * An accessor for creating requests from the Urns collection.
   *
   * <p>The typical use is:</p>
   * <pre>
   *   {@code Tagin tagin = new Tagin(...);}
   *   {@code Tagin.Urns.List request = tagin.urns().list(parameters ...)}
   * </pre>
   *
   * @return the resource collection
   */
  public Urns urns() {
    return new Urns();
  }

  /**
   * The "urns" collection of methods.
   */
  public class Urns {

    /**
     * Create a request for the method "urns.distanceto".
     *
     * This request holds the parameters needed by the the tagin server.  After setting any optional
     * parameters, call the {@link Distanceto#execute()} method to invoke the remote operation.
     *
     * @param urn1
     * @param urn2
     * @return the request
     */
    public Distanceto distanceto(java.lang.String urn1, java.lang.String urn2) throws java.io.IOException {
      Distanceto result = new Distanceto(urn1, urn2);
      initialize(result);
      return result;
    }

    public class Distanceto extends TaginRequest<com.google.api.services.tagin.model.Distance> {

      private static final String REST_PATH = "urns/{urn1}/distanceto/{urn2}";

      /**
       * Create a request for the method "urns.distanceto".
       *
       * This request holds the parameters needed by the the tagin server.  After setting any optional
       * parameters, call the {@link Distanceto#execute()} method to invoke the remote operation. <p>
       * {@link
       * Distanceto#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
       * must be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param urn1
       * @param urn2
       * @since 1.13
       */
      protected Distanceto(java.lang.String urn1, java.lang.String urn2) {
        super(Tagin.this, "GET", REST_PATH, null, com.google.api.services.tagin.model.Distance.class);
        this.urn1 = com.google.api.client.util.Preconditions.checkNotNull(urn1, "Required parameter urn1 must be specified.");
        this.urn2 = com.google.api.client.util.Preconditions.checkNotNull(urn2, "Required parameter urn2 must be specified.");
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public Distanceto setAlt(java.lang.String alt) {
        return (Distanceto) super.setAlt(alt);
      }

      @Override
      public Distanceto setFields(java.lang.String fields) {
        return (Distanceto) super.setFields(fields);
      }

      @Override
      public Distanceto setKey(java.lang.String key) {
        return (Distanceto) super.setKey(key);
      }

      @Override
      public Distanceto setOauthToken(java.lang.String oauthToken) {
        return (Distanceto) super.setOauthToken(oauthToken);
      }

      @Override
      public Distanceto setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Distanceto) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Distanceto setQuotaUser(java.lang.String quotaUser) {
        return (Distanceto) super.setQuotaUser(quotaUser);
      }

      @Override
      public Distanceto setUserIp(java.lang.String userIp) {
        return (Distanceto) super.setUserIp(userIp);
      }

      @com.google.api.client.util.Key
      private java.lang.String urn1;

      /**

       */
      public java.lang.String getUrn1() {
        return urn1;
      }

      public Distanceto setUrn1(java.lang.String urn1) {
        this.urn1 = urn1;
        return this;
      }

      @com.google.api.client.util.Key
      private java.lang.String urn2;

      /**

       */
      public java.lang.String getUrn2() {
        return urn2;
      }

      public Distanceto setUrn2(java.lang.String urn2) {
        this.urn2 = urn2;
        return this;
      }

      @Override
      public Distanceto set(String parameterName, Object value) {
        return (Distanceto) super.set(parameterName, value);
      }
    }
    /**
     * Create a request for the method "urns.neighbours".
     *
     * This request holds the parameters needed by the the tagin server.  After setting any optional
     * parameters, call the {@link Neighbours#execute()} method to invoke the remote operation.
     *
     * @param urn
     * @param maxCount
     * @return the request
     */
    public Neighbours neighbours(java.lang.String urn, java.lang.Integer maxCount) throws java.io.IOException {
      Neighbours result = new Neighbours(urn, maxCount);
      initialize(result);
      return result;
    }

    public class Neighbours extends TaginRequest<com.google.api.services.tagin.model.URNCollection> {

      private static final String REST_PATH = "urns/{urn}/neighbours";

      /**
       * Create a request for the method "urns.neighbours".
       *
       * This request holds the parameters needed by the the tagin server.  After setting any optional
       * parameters, call the {@link Neighbours#execute()} method to invoke the remote operation. <p>
       * {@link
       * Neighbours#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)}
       * must be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param urn
       * @param maxCount
       * @since 1.13
       */
      protected Neighbours(java.lang.String urn, java.lang.Integer maxCount) {
        super(Tagin.this, "GET", REST_PATH, null, com.google.api.services.tagin.model.URNCollection.class);
        this.urn = com.google.api.client.util.Preconditions.checkNotNull(urn, "Required parameter urn must be specified.");
        this.maxCount = com.google.api.client.util.Preconditions.checkNotNull(maxCount, "Required parameter maxCount must be specified.");
      }

      @Override
      public com.google.api.client.http.HttpResponse executeUsingHead() throws java.io.IOException {
        return super.executeUsingHead();
      }

      @Override
      public com.google.api.client.http.HttpRequest buildHttpRequestUsingHead() throws java.io.IOException {
        return super.buildHttpRequestUsingHead();
      }

      @Override
      public Neighbours setAlt(java.lang.String alt) {
        return (Neighbours) super.setAlt(alt);
      }

      @Override
      public Neighbours setFields(java.lang.String fields) {
        return (Neighbours) super.setFields(fields);
      }

      @Override
      public Neighbours setKey(java.lang.String key) {
        return (Neighbours) super.setKey(key);
      }

      @Override
      public Neighbours setOauthToken(java.lang.String oauthToken) {
        return (Neighbours) super.setOauthToken(oauthToken);
      }

      @Override
      public Neighbours setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Neighbours) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Neighbours setQuotaUser(java.lang.String quotaUser) {
        return (Neighbours) super.setQuotaUser(quotaUser);
      }

      @Override
      public Neighbours setUserIp(java.lang.String userIp) {
        return (Neighbours) super.setUserIp(userIp);
      }

      @com.google.api.client.util.Key
      private java.lang.String urn;

      /**

       */
      public java.lang.String getUrn() {
        return urn;
      }

      public Neighbours setUrn(java.lang.String urn) {
        this.urn = urn;
        return this;
      }

      @com.google.api.client.util.Key("max_count")
      private java.lang.Integer maxCount;

      /**

       */
      public java.lang.Integer getMaxCount() {
        return maxCount;
      }

      public Neighbours setMaxCount(java.lang.Integer maxCount) {
        this.maxCount = maxCount;
        return this;
      }

      @Override
      public Neighbours set(String parameterName, Object value) {
        return (Neighbours) super.set(parameterName, value);
      }
    }
    /**
     * Create a request for the method "urns.remove".
     *
     * This request holds the parameters needed by the the tagin server.  After setting any optional
     * parameters, call the {@link Remove#execute()} method to invoke the remote operation.
     *
     * @param urn
     * @return the request
     */
    public Remove remove(java.lang.String urn) throws java.io.IOException {
      Remove result = new Remove(urn);
      initialize(result);
      return result;
    }

    public class Remove extends TaginRequest<Void> {

      private static final String REST_PATH = "urns/{urn}";

      /**
       * Create a request for the method "urns.remove".
       *
       * This request holds the parameters needed by the the tagin server.  After setting any optional
       * parameters, call the {@link Remove#execute()} method to invoke the remote operation. <p> {@link
       * Remove#initialize(com.google.api.client.googleapis.services.AbstractGoogleClientRequest)} must
       * be called to initialize this instance immediately after invoking the constructor. </p>
       *
       * @param urn
       * @since 1.13
       */
      protected Remove(java.lang.String urn) {
        super(Tagin.this, "DELETE", REST_PATH, null, Void.class);
        this.urn = com.google.api.client.util.Preconditions.checkNotNull(urn, "Required parameter urn must be specified.");
      }

      @Override
      public Remove setAlt(java.lang.String alt) {
        return (Remove) super.setAlt(alt);
      }

      @Override
      public Remove setFields(java.lang.String fields) {
        return (Remove) super.setFields(fields);
      }

      @Override
      public Remove setKey(java.lang.String key) {
        return (Remove) super.setKey(key);
      }

      @Override
      public Remove setOauthToken(java.lang.String oauthToken) {
        return (Remove) super.setOauthToken(oauthToken);
      }

      @Override
      public Remove setPrettyPrint(java.lang.Boolean prettyPrint) {
        return (Remove) super.setPrettyPrint(prettyPrint);
      }

      @Override
      public Remove setQuotaUser(java.lang.String quotaUser) {
        return (Remove) super.setQuotaUser(quotaUser);
      }

      @Override
      public Remove setUserIp(java.lang.String userIp) {
        return (Remove) super.setUserIp(userIp);
      }

      @com.google.api.client.util.Key
      private java.lang.String urn;

      /**

       */
      public java.lang.String getUrn() {
        return urn;
      }

      public Remove setUrn(java.lang.String urn) {
        this.urn = urn;
        return this;
      }

      @Override
      public Remove set(String parameterName, Object value) {
        return (Remove) super.set(parameterName, value);
      }
    }

  }

  /**
   * Builder for {@link Tagin}.
   *
   * <p>
   * Implementation is not thread-safe.
   * </p>
   *
   * @since 1.3.0
   */
  public static final class Builder extends com.google.api.client.googleapis.services.json.AbstractGoogleJsonClient.Builder {

    /**
     * Returns an instance of a new builder.
     *
     * @param transport HTTP transport, which should normally be:
     *        <ul>
     *        <li>Google App Engine:
     *        {@code com.google.api.client.extensions.appengine.http.UrlFetchTransport}</li>
     *        <li>Android: {@code newCompatibleTransport} from
     *        {@code com.google.api.client.extensions.android.http.AndroidHttp}</li>
     *        <li>Java: {@link com.google.api.client.googleapis.javanet.GoogleNetHttpTransport#newTrustedTransport()}
     *        </li>
     *        </ul>
     * @param jsonFactory JSON factory, which may be:
     *        <ul>
     *        <li>Jackson: {@code com.google.api.client.json.jackson2.JacksonFactory}</li>
     *        <li>Google GSON: {@code com.google.api.client.json.gson.GsonFactory}</li>
     *        <li>Android Honeycomb or higher:
     *        {@code com.google.api.client.extensions.android.json.AndroidJsonFactory}</li>
     *        </ul>
     * @param httpRequestInitializer HTTP request initializer or {@code null} for none
     * @since 1.7
     */
    public Builder(com.google.api.client.http.HttpTransport transport, com.google.api.client.json.JsonFactory jsonFactory,
        com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      super(
          transport,
          jsonFactory,
          DEFAULT_ROOT_URL,
          DEFAULT_SERVICE_PATH,
          httpRequestInitializer,
          false);
    }

    /** Builds a new instance of {@link Tagin}. */
    @Override
    public Tagin build() {
      return new Tagin(this);
    }

    @Override
    public Builder setRootUrl(String rootUrl) {
      return (Builder) super.setRootUrl(rootUrl);
    }

    @Override
    public Builder setServicePath(String servicePath) {
      return (Builder) super.setServicePath(servicePath);
    }

    @Override
    public Builder setHttpRequestInitializer(com.google.api.client.http.HttpRequestInitializer httpRequestInitializer) {
      return (Builder) super.setHttpRequestInitializer(httpRequestInitializer);
    }

    @Override
    public Builder setApplicationName(String applicationName) {
      return (Builder) super.setApplicationName(applicationName);
    }

    @Override
    public Builder setSuppressPatternChecks(boolean suppressPatternChecks) {
      return (Builder) super.setSuppressPatternChecks(suppressPatternChecks);
    }

    @Override
    public Builder setSuppressRequiredParameterChecks(boolean suppressRequiredParameterChecks) {
      return (Builder) super.setSuppressRequiredParameterChecks(suppressRequiredParameterChecks);
    }

    @Override
    public Builder setSuppressAllChecks(boolean suppressAllChecks) {
      return (Builder) super.setSuppressAllChecks(suppressAllChecks);
    }

    /**
     * Set the {@link TaginRequestInitializer}.
     *
     * @since 1.12
     */
    public Builder setTaginRequestInitializer(
        TaginRequestInitializer taginRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(taginRequestInitializer);
    }

    @Override
    public Builder setGoogleClientRequestInitializer(
        com.google.api.client.googleapis.services.GoogleClientRequestInitializer googleClientRequestInitializer) {
      return (Builder) super.setGoogleClientRequestInitializer(googleClientRequestInitializer);
    }
  }
}
